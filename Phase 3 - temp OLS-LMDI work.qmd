---
title: "titre"
format: html
editor: visual
---

```{r}

## Defining logarithmic variables to rationalize outliers/zero values etc. 
dataset_for_ols <- joined_dataset |> 
  filter(`NAICS2  (sectors)` == 21) |> 
  rename ( `Total CO2 Emissions (non_biogenic) test` =  `Total CO2 Emissions (non_biogenic)`) |>
  mutate(`ln Total CO2 Emissions test` = log(`Total CO2 Emissions (non_biogenic) test`), `ln emp` = log(avg_Emp), `ln earn` = log(avg_EarnS))

## Running the base regression
ols_model <- lm(`ln Total CO2 Emissions test` ~  `ln earn` + `ln emp`, data = dataset_for_ols)

## Summary of the OLS results
summary(ols_model)

## Plot residuals
par(mfrow = c(2, 2)) ### setting up layout
plot(ols_model)



#test_data_21 <- test_data_21 |> mutate( "avg_FrmJbC2" = abs(avg_FrmJbC))
#test_data_21 <- test_data_21 |> mutate("ln Total CO2 Emissions test" = log(`Total CO2 Emissions (non_biogenic) test`), "ln emp" = log(avg_Emp), "ln_earn" = log(avg_EarnS), "ln_job_change" = log(avg_FrmJbC2))

```

```{r}
# Installing the lfe package
install.packages("lfe")
install.packages("modelsummary")
install.packages("broom")

# Loading the lfe package
library(lfe)
library(modelsummary)
library(broom)
library(kableExtra)
```

```{r}
# Run a fixed-effects regression
fe_ols_model <- felm(`ln Total CO2 Emissions test` ~  `ln earn` + `ln emp` | year, data = dataset_for_ols)

# View the summary of the model
summary(fe_ols_model)


```

```{r}
# Cluster by state
test_data_21 <- test_data_21 |> 
  mutate(state_dummy = if_else(State == "TX", 1, 0))
model_fe <- felm(`ln Total CO2 Emissions test` ~  ln_earn + `ln emp` + state_dummy | year , data = test_data_21)
                        #cmethod = "reghdfe", 
                       #cluster = "State")
summary(model_fe)

test_data_all_sector <- joined_dataset |> 
  mutate("NAICS" = substr(industry, 1, 2 ), .keep = "all")|>
  rename ( `Total CO2 Emissions (non_biogenic) test` =  `Total CO2 Emissions (non_biogenic)`  ) |>
  mutate(state_dummy = if_else(State == "TX", 1, 0))

#test_data_all_sector <- test_data_all_sector |> mutate("ln Total CO2 Emissions test" = log(`Total CO2 Emissions (non_biogenic) test`), "ln emp" = log(avg_Emp), "ln_earn" = log(avg_EarnS))

test_data_all_sector <- test_data_all_sector |> 
  mutate(
    `ln Total CO2 Emissions test` = log(`Total CO2 Emissions (non_biogenic) test` + 1), 
    `ln emp` = log(avg_Emp + 1), 
    `ln_earn` = log(avg_EarnS + 1)
  )


model_fe <- felm(`ln Total CO2 Emissions test` ~ ln_earn + `ln emp` + state_dummy | year + industry, 
                 cmethod = "reghdfe", 
                 cluster = "industry",
                 data = test_data_all_sector)

summary(model_fe)

# Extract residuals and fitted values from the fixed effects model
residuals_fe <- residuals(model_fe)
fitted_values_fe <- fitted(model_fe)

# Set up a 2x2 plot layout
par(mfrow=c(2,2))

# Plot 1: Residuals vs Fitted
plot(fitted_values_fe, residuals_fe, main="Residuals vs Fitted",
     xlab="Fitted Values", ylab="Residuals")
abline(h = 0, col = "red")

# Plot 2: Normal Q-Q plot
qqnorm(residuals_fe, main="Normal Q-Q")
qqline(residuals_fe, col = "red")

# Plot 3: Scale-Location (Spread-Location)
sqrt_residuals <- sqrt(abs(residuals_fe))
plot(fitted_values_fe, sqrt_residuals, main="Scale-Location",
     xlab="Fitted Values", ylab="Sqrt(|Residuals|)")
abline(h = 0, col = "red")

# Plot 4: Residuals vs Leverage (Cook's Distance)
cooks_distance <- cooks.distance(model_fe)
plot(fitted_values_fe, cooks_distance, main="Residuals vs Leverage",
     xlab="Fitted Values", ylab="Cook's Distance")
abline(h = 4 / length(cooks_distance), col = "red")



```

```{r}
# Compute R-squared and adjusted R-squared
r_squared <- summary(model_clustered)$r.squared
adj_r_squared <- summary(model_clustered)$adj.r.squared

# Number of observations
n_obs <- nobs(model_clustered)

# F-statistic (if needed)
f_stat <- summary(model_clustered)$fstat



# Add statistics as rows
custom_stats <- data.frame(
  term = c("Number of Observations", "R-squared", "Adjusted R-squared", "F-statistic"),
  estimate = c(n_obs, round(r_squared, 3), round(adj_r_squared, 3), round(f_stat, 3))
)

# Generate the table with custom statistics
modelsummary(
  model_clustered,
  statistic = "({std.error})",
  title = "Regression Results with Fixed Effects",
  stars = TRUE,
  add_rows = custom_stats,
  output = "kableExtra"
)

# Append a note
cat("\nNote: Fixed Effects include Year and State variables. Standard errors are clustered by State.\n")


```

```{r}

joined_dataset2 <- joined_dataset
#joined_dataset2 <- joined_dataset2 |> filter(startsWith(industry, "92") )
# Step 2: Calculate the growth rates of the factors (wage, employment) and emissions
joined_dataset2 <- joined_dataset2 |>
  mutate(
    `NAICS2  (sectors)` = substr(industry, 1, 2 ), .keep = "all")
joined_dataset2 <-joined_dataset2 |> filter(`NAICS2  (sectors)` != 33 & `NAICS2  (sectors)` != 32)

joined_dataset2$wg <-c(NA, diff(log(joined_dataset2$avg_EarnS)))
joined_dataset2$eg <-  c(NA, diff(log(joined_dataset2$avg_Emp)))
joined_dataset2$co2g <- c(NA, diff(log(joined_dataset2$`Total CO2 Emissions (non_biogenic)`)))
# Step 3: Calculate the LMDI decomposition
# For simplicity, we can use the formula as a contribution from wage and employment
joined_dataset2$w_effect = joined_dataset2$wg * (joined_dataset2$eg / lag(joined_dataset2$eg))
joined_dataset2$e_effect = joined_dataset2$eg * (joined_dataset2$wg / lag(joined_dataset2$wg))

# Calculate the total emission change (change in carbon emissions)
joined_dataset2$co2_t =  joined_dataset2$w_effect + joined_dataset2$e_effect

# Step 4: View the results
#print(co2_t)

# Step 5: Plot the effects of wage and employment on emissions
ggplot(joined_dataset2, aes(x = `NAICS2  (sectors)`)) +
  geom_col(aes(y = joined_dataset2$co2_t, color = "Total Effect")) +
  labs(title = "LMDI Decomposition of Carbon Emissions Change",
       x = "naics 2", y = "Effect on Carbon Emissions") +

  theme_minimal()

ggplot(joined_dataset2, aes(x = `NAICS2  (sectors)`)) +
  geom_col(aes(y = joined_dataset2$w_effect, color = "Wage Effect")) +
  labs(title = "LMDI Decomposition of Carbon Emissions Change",
       x = "naics 2", y = "Effect on Carbon Emissions") +
  theme_minimal()
ggplot(joined_dataset2, aes(x = `NAICS2  (sectors)`)) +
  geom_col(aes(y = joined_dataset2$e_effect, color = "Employment Effect")) +
  labs(title = "LMDI Decomposition of Carbon Emissions Change",
       x = "naics 2", y = "Effect on Carbon Emissions") +
  theme_minimal()
```

```{r}


<<<<<<< HEAD
ggplot(joined_dataset2, aes(x = `NAICS2  (sectors)`)) +
  geom_col(aes(y = w_effect, color = "Wage Effect"), size = 1.2) +

  geom_col(aes(y = e_effect, color = "Employment Effect"), size = 1.2) +

  geom_col(aes(y = co2_t, color = "Total Effect"), size = 1.2) +
  #geom_point(aes(y = co2_t, color = "Total Effect"), size = 2) +
  labs(title = "LMDI Decomposition of Carbon Emissions Change",
       x = "Year", y = "Effect on Carbon Emissions",
       color = "Effects") +
  scale_color_manual(values = c("Wage Effect" = "blue", "Employment Effect" = "green", "Total Effect" = "red")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 14),
    axis.text = element_text(size = 12),
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 12)
  )
```

This code adds data points, improves the color scheme, and customizes the theme for better visual appeal. Give it a try and see how it looks! If you need further customization, feel free to ask.

```{r}


=======
>>>>>>> d0bbf6ddcc8f810ddc37a32e26a15e7d74923e46


# Plot
ggplot(joined_dataset2, aes(x = `NAICS2  (sectors)`, y = w_effect , fill = "w_effect")) +
  geom_bar(stat = "identity", position = "stack") +
  geom_bar(aes(y = e_effect, fill = "e_effect") ,stat = "identity", position = "stack")
  labs(title = "LMDI Decomposition of Carbon Emissions Change",
       x = "naics", y = "Effect on Carbon Emissions",
       fill = "Factors") +
  scale_fill_manual(values = c("Wage Effect" = "blue", "Employment Effect" = "green", "Total Effect" = "red")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 14),
    axis.text = element_text(size = 12),
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 12)
  )
ggplot(joined_dataset2, aes(x = `NAICS2  (sectors)`, y = w_effect , fill = "w_effect")) +
  geom_bar(stat = "identity", position = "stack") +
  #geom_bar(aes(y = e_effect, fill = "e_effect") ,stat = "identity", position = "stack")
  labs(title = "LMDI Decomposition of Carbon Emissions Change",
       x = "naics", y = "Effect on Carbon Emissions",
       fill = "Factors") +
  scale_fill_manual(values = c("Wage Effect" = "blue", "Employment Effect" = "green", "Total Effect" = "red")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 14),
    axis.text = element_text(size = 12),
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 12)
  )
```

This code will create a stacked bar plot where each bar represents a year, and the different colors within each bar represent the contributions of the different factors. Adjust the `joined_dataset2` data frame to match your actual data.

Give this a try and let me know if you need any further adjustments!

```{r}
long_data <- joined_dataset2 %>%
  pivot_longer(cols = c(w_effect, e_effect, co2_t),
               names_to = "factor",
               values_to = "value") %>%
  mutate(factor = recode(factor,
                         w_effect = "Wage Effect",
                         e_effect = "Employment Effect"))

# Plot
ggplot(long_data, aes(x = `NAICS2  (sectors)`, y = value, fill = factor)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = "LMDI Decomposition of Carbon Emissions Change",
       x = "NAICS Sectors", y = "Effect on Carbon Emissions",
       fill = "Factors") +
  scale_fill_manual(values = c("Wage Effect" = "blue", "Employment Effect" = "green", "Total Effect" = "red")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 14),
    axis.text = element_text(size = 12),
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 12)
  )
```

```{r}
# Pivot the data for plotting
long_data <- joined_dataset2 %>%
  pivot_longer(cols = c(w_effect, e_effect, co2_t),
               names_to = "factor",
               values_to = "value") %>%
  mutate(fac = recode(factor,
                         w_effect = "Wage Effect",
                         e_effect = "Employment Effect",
                         co2_t = "Total Effect"))
#mutate(factor = recode(factor,
                         #w_effect = "Wage Effect",
                         #e_effect = "Employment Effect",
                         #co2_t = "Total Effect"))

# Separate total effect for red dots
total_effect <- long_data %>%
  filter(fac == "Total Effect") %>%
  select(`NAICS2  (sectors)`, value, fac)

long_data <- long_data %>% filter(fac != "Total Effect")

# Plot
ggplot(long_data, aes(x = `NAICS2  (sectors)`, y = value, fill = fac)) +
  geom_bar(stat = "identity", position = "stack") +  # Stacked bars
  geom_point(data = total_effect, aes(x = `NAICS2  (sectors)`, y = value), 
             color = "red", size = 3) +  # Red dots for total effect
  labs(title = "LMDI Decomposition of Carbon Emissions Change",
       x = "NAICS Sectors", y = "Effect on Carbon Emissions",
       fill = "Factors") +
  scale_fill_manual(values = c("Wage Effect" = "blue", "Employment Effect" = "green", "Total Effect" = "red")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 14),
    axis.text = element_text(size = 12),
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 12)
  )


```

```{r}
# Step 1: Aggregate the data by industry
aggregated_data <- joined_dataset2 %>%
  group_by(`NAICS2  (sectors)`) %>%
  summarise(
    w_effect = sum(w_effect, na.rm = TRUE),
    e_effect = sum(e_effect, na.rm = TRUE),
    co2_t = sum(co2_t, na.rm = TRUE)  # Total effect
  ) %>%
  pivot_longer(cols = c(w_effect, e_effect, co2_t),
               names_to = "factor",
               values_to = "value") %>%
  mutate(fac = recode(factor,
                      w_effect = "Wage Effect",
                      e_effect = "Employment Effect",
                      co2_t = "Total Effect"))

# Step 2: Separate total effect for red dots
total_effect <- aggregated_data %>%
  filter(factor == "co2_t") %>%
  select(`NAICS2  (sectors)`, value, fac)

aggregated_data <- aggregated_data  %>% filter(fac != "Total Effect")

# Step 3: Plot
ggplot(aggregated_data, aes(x = `NAICS2  (sectors)`, y = value, fill = fac)) +
  geom_bar(stat = "identity", position = "stack") +  # Single stacked bar per industry
  geom_point(data = total_effect, aes(x = `NAICS2  (sectors)`, y = value), 
             color = "red", size = 3) +  # Single red dot for total effect
  labs(title = "LMDI Decomposition of Carbon Emissions Change",
       x = "NAICS Sectors", y = "Effect on Carbon Emissions",
       fill = "Factors") +
  scale_fill_manual(values = c("Wage Effect" = "blue", "Employment Effect" = "green")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 14),
    axis.text = element_text(size = 12),
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 12)
  )


```

# PCA Analysis to Understand the Contribution of avg_Emp and avg_Earnings to Total CO2 Emissions

```{r}

# Step 1: Standardize the Variables
data_standardized <- joined_dataset |> 
  ungroup() |>
  dplyr::select(`Total CO2 Emissions (non_biogenic)` , avg_Emp , avg_EarnS) |>
  mutate(across(everything(), scale))

data_standardized$`Total CO2 Emissions (non_biogenic)`[is.infinite(data_standardized$`Total CO2 Emissions (non_biogenic)`)] <- NA
data_standardized$avg_EarnS[is.infinite(data_standardized$avg_EarnS)] <- NA
data_standardized$avg_Emp[is.infinite(data_standardized$avg_Emp)] <- NA
data_standardized <- na.omit(data_standardized)

pca_result <- prcomp(data_standardized, scale. = FALSE, center = FALSE)

# Step 3: Analyze PCA Results
# Summary of PCA
summary_pca <- summary(pca_result)
print(summary_pca)

# Loadings (Contributions of Factors)
loadings <- pca_result$rotation
print("Loadings:")
print(loadings)

# Step 4: Visualize the PCA
# Biplot to visualize the relationship between variables and principal components
biplot(pca_result, scale = 0)

# Step 5: Compute the Proportion of Variance Explained (PVE)
pve <- pca_result$sdev^2 / sum(pca_result$sdev^2)
print("Proportion of Variance Explained:")
print(pve)

# Step 6: Report Findings
cat("\n--- PCA Results Summary ---\n")
cat("Proportion of Variance Explained (PVE):\n")
print(pve)
cat("\nLoadings (Variable Contributions to Components):\n")
print(loadings)
```


```{r}
test_wf_data <- join_wf_data |>
  group_by(industry, year) %>%
  summarize(
    avg_earnings = mean(avg_EarnS, na.rm = TRUE),
    total_employment = sum(avg_Emp, na.rm = TRUE),
    avg_FrmJbC = mean(avg_FrmJbC, na.rm = TRUE),
    .groups = "drop"
  )
test_join <- test_wf_data |> inner_join(clean_em_data)
```

```{r}
test_join <- test_join |>
  mutate(`NAICS2  (sectors)` = substr(industry, 1, 2 ), .keep = "all") 
  
test_join |>
  ggplot(aes(x = year, y = `Total CO2 Emissions (non_biogenic)`, fill = `NAICS2  (sectors)`)) +
  geom_col() +
  ## We let the two subcharts have different scales 
  facet_wrap(vars(State), scales = "free_y") + 
  labs(title = "Total CO2 Emissions of energy producers by State")

# Table to analyse the drivers of sudden C02 emissions hike in Texas between 2017 and 2018
driver_emissions_hike <- test_join |> 
  filter(State == "TX" & year > 2016 & year < 2019) |>
  group_by(year, `NAICS2  (sectors)`) |> 
  summarize("Number of firms" = n(),
            "Total sector emissions" = sum(`Total CO2 Emissions (non_biogenic)`))

driver_emissions_hike |>
  kable("html", caption = "What cause a massive increase in Texas emissions between 2017 and 2018 ?") |>
  kable_styling(full_width = TRUE, bootstrap_options = c("striped", "hover", "condensed"))

test_join |>
  ggplot(aes(x = year, y = `Total CO2 Emissions (non_biogenic)`, fill = State)) +
  geom_col(position = "fill") +
  labs(title = "Texas vs California particpation in total C02 emissions")
```

```{r}
dataset_summary_test <- test_join |>
  ungroup() |>
  summarise(
    "Number of rows" = nrow(test_join),
    "Number of columns" = ncol(test_join),
    "Period" = paste(range(year), collapse= " - "),
    "Periodicity" = "Annual",
    "Extremum levels of CO2 emissions " = paste(range(`Total CO2 Emissions (non_biogenic)`), collapse = " - "),
    # separate the rows that have a "," to not double count firms in several subsectors as distinct values
    "Number of industry" = length(unique(industry)),
    "Number of sectors" = length(unique(`NAICS2  (sectors)`)),
    "Total number of missing values across the sheet" = sum(sapply(test_join, function(x) sum(is.na(x)))),
    "Missing values in one our key variables" = sum(
      #summing every missing values of each key variables and then summing them with each others to obtain the          total
      sum(is.na(`Total CO2 Emissions (non_biogenic)`)),
      sum(is.na(total_employment)),
      sum(is.na(avg_earnings)),
      sum(is.na(avg_FrmJbC)))
  )


  
NAICS2_test_level_summary <- test_join |>
  group_by(`NAICS2  (sectors)`) |>
  summarise(
    "Number of rows" = n(),
    "Period" = paste(range(year), collapse= " - "),
    "Periodicity" = "Annual",
    "Extremum levels of CO2 emissions " = paste(range(`Total CO2 Emissions (non_biogenic)`), collapse = " - "),
    # separate the rows that have a "," to not double count firms in several subsectors as distinct values
   "Contribution (%) of the sector in the total CO2 emissions" = 
      100 * sum(`Total CO2 Emissions (non_biogenic)`) / sum(test_join$`Total CO2 Emissions (non_biogenic)`),
   #Contribution of one sector in total emissions divided by the emissions of all sectors 
    "Contribution (%) of California to the total CO2 emissions of the sector" = 
      100 * sum(if_else(State == "CA", `Total CO2 Emissions (non_biogenic)`, 0, missing = 0), na.rm = TRUE) / 
      sum(if_else(State %in% c("CA", "TX"), `Total CO2 Emissions (non_biogenic)`, 0, missing = 0), na.rm = TRUE),
   #Contribution of California to total emissions of the sector, Texas' one is thus obtain by  TX = 100 - CA
   "Sector Contribution (%) of California's total CO2 emissions" = 
      100 * sum(if_else(State == "CA", `Total CO2 Emissions (non_biogenic)`, 0, missing = 0), na.rm = TRUE) / 
      sum(if_else(State == "CA", `Total CO2 Emissions (non_biogenic)`, 0, missing = 0), na.rm = TRUE),
    "Number of industry" = length(unique(industry)),
    "Missing values in one our key variables" = sum(
      sum(is.na(`Total CO2 Emissions (non_biogenic)`)),
      sum(is.na(total_employment)),
      sum(is.na(avg_earnings)),
      sum(is.na(avg_FrmJbC)))
  )

## Tables for each summary

dataset_summary_test |>
  kable("html", caption = "Global database information") |>
  kable_styling(full_width = T, bootstrap_options = c("striped", "hover", "condensed"))


NAICS2_test_level_summary |>
  kable("html", caption = "Per NAICS 2 database information") |>
  kable_styling(full_width = T, bootstrap_options = c("striped", "hover", "condensed"))
```
