---
title: "Phase 3 - Data analysis"
format: 
  html: default
  pdf: default
---

```{r}
#| echo: false
#| message: false
#| warning: false

#Libraries

## Data 
library(vroom)
library(here)
library(readr)
library(httr2)

## Treatment
library(tidyr)
library(dplyr)
library(knitr)
library(kableExtra)
library(cowplot)
library(ggplot2)
library(broom)

## Regression
library(stargazer)
library(modelsummary)
library(lmtest)
library(lfe)
```

```{r}
#| echo: false
#| message: false
#| warning: false

# Adding the final dataset
joined_dataset <- readRDS("joined_dataset.rds")
```

## Methodology

How do workforce characteristics, including wage levels, employment size, and net employment change, contribute to variations in CO2 emissions in energy-producing industries over time?

In the first part of our analysis, we will focus on establishing a non-causal relationship between CO2 emissions, and workforce characteristics (monthly average wage, employment size and net job change) using the Logarithmic Mean Divisia Index (LMDI) decomposition method to identify the contribution of different workforce characteristics to changes in CO2 emissions.

The Logarithmic Mean Divisia Index (LMDI) is an analytical method that breaks down aggregate changes in a variable into several effects to identify the main drivers behind the changes in the variable of interest. Using the logarithmic mean, it allows for consistent results in the presence of zero or missing values. The LMDI can be applied in an additive or a multiplicative method : The additive method consists in representing the absolute effect of a factor to the changes in the variable of interest. The total change in the variable of interest is expressed as the sum of the contributions of all the factors taken into account. The multiplicative method corresponds to computing the relative contribution of each factor to the changes in the variable of interest (expressed in general in percentages). Then, the variable of interest is expressed as a product of the relative contributions of each variable.

In this case, we chose to use the Additive LMDI method given the nature of the factors. Indeed, industry and workforce characteristics such as wage and employment size vary in general in absolute terms, which makes the interpretation of their effect in the LMDI decomposition easier using the additive approach. Moreover, this approach makes our panel analysis more straightforward than the multiplicative one, where we would be comparing relative impacts across groups. ([Ang, 2015](https://doi.org/10.1016/j.enpol.2015.07.007))

In the second part of our analysis, we will try to identify the effect of the regulatory environment on CO2 emissions across industries. For this study, we plan on conducting a panel analysis to have more information and to study the evolution in behavior of each industry over time. It will allow us to analyse the heterogeneity of responses of these industries (i.e. if some of them are more responsive to tax on their emissions than others).

To compare regulatory environments, we use California as a treatment group. California is a huge polluting state (second most important emitter of C02 in the US)that has been making efforts to transition towards clean energies as it introduced a cap-and-trade program in 2015 to regulate emissions. Our control group will be Texas, the leading energy supplier in the U.S. that still relies in majority on fossil fuels (most important emitter of C02 in the US). Studying these two states together allows for understanding how a change in environmental policy shapes CO2 emissions at a sectoral level.

```{r}
#| message: false
#| echo: false
#| warning: false

# Creating a Directed Acyclic Graph (DAG), displaying the causal relationships between the variables used in our model

## Installing the packages for the DAG
library(dagitty)
library(ggdag)

## Defining the DAG (first, defining the names and positions of the variables ie. "nodes", and then the orientation of the relations between them)
dag <- dagitty("
dag {
  RegulatoryEnvironment [pos = \"0.5,1\"]
  CO2Emissions [pos = \"1,0\"]
  MonthlyAverageWage [pos = \"-0.25,0\"]
  EmploymentSize [pos = \"-0.25,1.5\"]
  NetEmploymentChange [pos = \"-0.25,-1.5\"]
  IndustryType [pos = \"-1,0\"]
  CapAndTradePolicy [pos = \"0.5,2.5\"]
  California [pos = \"0.5,4\"]
  Texas [pos = \"0.5,-2\"]

  RegulatoryEnvironment -> MonthlyAverageWage
  RegulatoryEnvironment -> EmploymentSize
  RegulatoryEnvironment -> NetEmploymentChange
  IndustryType -> MonthlyAverageWage
  IndustryType -> EmploymentSize
  IndustryType -> NetEmploymentChange
  MonthlyAverageWage -> CO2Emissions
  EmploymentSize -> CO2Emissions
  NetEmploymentChange -> CO2Emissions
  CapAndTradePolicy -> RegulatoryEnvironment
  California -> RegulatoryEnvironment
  Texas -> RegulatoryEnvironment
}
")

## Defining a variable (vector-column) which assigns a color code to each "node"
node_colors <- c(
  "CO2Emissions" = "tomato",
  "MonthlyAverageWage" = "skyblue",
  "EmploymentSize" = "skyblue",
  "NetEmploymentChange" = "skyblue",
  "IndustryType" = "yellow",
  "RegulatoryEnvironment" = "orange",
  "CapAndTradePolicy" = "green",
  "California" = "purple",
  "Texas" = "purple"
)

## Plotting the causal diagram
ggdag(dag, text = FALSE) +
  geom_dag_node(aes(fill = name), shape = 21, size = 15, show.legend = FALSE) + ### fill according to node names
  geom_dag_label(nudge_y = -0.3, size = 3) + ### positioning and resizing the label names
  scale_fill_manual(values = node_colors) +  ### applying the custom color mapping to the nodes
  ggtitle("Causal Diagram for CO2 Emissions Analysis") + ### giving a title to the plot
  theme(plot.title = element_text(hjust = 0.25)) + 
  theme_minimal()
```

Variable of interest

Our dependent variable will be `CO2 emissions (non biogenic)`, which corresponds to the unit of metric tons of CO2 (not issued from biomass) annually emitted by energy-producing facilities.

Energy-producing firms can be divided in three groups :

-   Direct emitters, which correspond to facilities that combust fuels or otherwise put greenhouse gases into the atmosphere directly from their facility (ex. power plants).

-   Energy suppliers that supply products into the economy which emit greenhouse gases into the atmosphere, when combusted or released (ex. gasoline production).

-   CO2 injection facilities, ie. wells that a CO2 stream into the subsurface (ex. oil pumping).

Independent variables

There is literature highlighting the effect of average number of hours worked on carbon emissions with model including the population/industry size as a factor (see for example [Fitzgerald, 2022](https://doi.org/10.1016/j.erss.2021.102385) ). We decided to keep the size aspect with `total_Emp` (that proxies the size of an industry by counting the number of employees working) but to analyze the effect of the average annual wage on those carbon emissions.

We chose to use `avg_EarnS` as a proxy for workforce skill level and investment in human capital. The idea behind this is that "greener jobs" (so here represented by jobs associated with firms emitting relatively low levels of C02) tends to hire more skilled workers (see [Bowen et al., 2018](https://www.sciencedirect.com/science/article/pii/S0140988318300963), [Elliott and Lindley (2017)](https://www.sciencedirect.com/science/article/abs/pii/S0921800916311442)) with higher wages associated. Therefore, we expect a negative relationship between wage and CO2 emissions.

Another key variable is Net employment change (`total_FrmJbC`) which will be used as a proxy for contraction or expansion of firms in an industry. The hypothesis is that industries with quick expansions may emit more due to production scale (and inverse effect for industries shrinking).

Additionnally, we will create a dummy to separate our analysis such that :

-   `State` is divided in two (California and Texas)

-   A policy dummy was added to study the impact of new regulations aimed at reducing emissions.

We will study the heterogeneity of response depending on the industry.

## Data Description

The dataset we will be using for our analysis corresponds to a merge of two datasets : one from the US Census Bureau which provides data on Quarterly workforce characteristics of workers in California and Texas, and another from the US Environmental Protection Agency which provides data on energy-producing facilities in the US.

After merging and cleaning, we ended up with a dataset of 18270 observations from the two States of interest, California and Texas, covering yearly the period 2013 to 2023. We chose this time period because our emissions dataset covers years from 2010 to 2023 but the first years had sparse data. Thus we decided to delete those years for clarity's sake, which should not induce any major changes in further analyses.

The following tables provide an overview of the final joined dataset (Table 1) and a analysis sector by sector of extremum levels and contributions (Table 2).

```{r}
#| echo: false
#| message: false

joined_dataset <- joined_dataset

# Summary table for our joined dataset
dataset_summary <- joined_dataset |>
  ungroup() |>
  summarise(
    "Number of rows" = nrow(joined_dataset),
    "Number of columns" = ncol(joined_dataset),
    "Period" = paste(range(year), collapse= " - "),
    "Periodicity" = "Annual",
    "Extremum levels of CO2 emissions " = paste(range(`Total CO2 Emissions (non_biogenic)`), collapse = " - "),
    # separate the rows that have a "," to not double count firms in several subsectors as distinct values
    "Number of industry" = length(unique(industry)),
    "Number of sectors" = length(unique(`NAICS2  (sectors)`)),
    #Let's implement a missing values count to be sure we correctly treated them
    "Total number of missing values across the sheet" = sum(sapply(joined_dataset, function(x) sum(is.na(x)))),
    "Missing values in one our key variables" = sum(
      #summing every missing values of each key variables and then summing them with each others to obtain the          total
      sum(is.na(`Total CO2 Emissions (non_biogenic)`)),
      sum(is.na(total_Emp)),
      sum(is.na(avg_EarnS)),
      sum(is.na(total_FrmJbC)))
  )

Total_C02_emission_CA <- joined_dataset |>
  group_by(`NAICS2  (sectors)`) |>
  summarize(total_CO2_CA = if_else(State == "CA",`Total CO2 Emissions (non_biogenic)`, 0, missing = 0))
  
NAICS2_level_summary <- joined_dataset |>
  group_by(`NAICS2  (sectors)`) |>
  summarise(
    "Number of rows" = n(),
    "Period" = paste(range(year), collapse= " - "),
    "Periodicity" = "Annual",
    "Extremum levels of CO2 emissions " = paste(range(`Total CO2 Emissions (non_biogenic)`), collapse = " - "),
    # separate the rows that have a "," to not double count firms in several subsectors as distinct values
   "Contribution (%) of the sector in the total CO2 emissions" = 
      100 * sum(`Total CO2 Emissions (non_biogenic)`) / sum(joined_dataset$`Total CO2 Emissions (non_biogenic)`),
   #Contribution of one sector in total emissions divided by the emissions of all sectors 
    "Contribution (%) of California to the total CO2 emissions of the sector" = 
      100 * sum(if_else(State == "CA", `Total CO2 Emissions (non_biogenic)`, 0, missing = 0), na.rm = TRUE) / 
      sum(if_else(State %in% c("CA", "TX"), `Total CO2 Emissions (non_biogenic)`, 0, missing = 0), na.rm = TRUE),
   #Contribution of California to total emissions of the sector, Texas' one is thus obtain by  TX = 100 - CA
   "Sector Contribution (%) of California's total CO2 emissions" = 
    100 * sum(if_else(State == "CA", `Total CO2 Emissions (non_biogenic)`, 0, missing = 0), na.rm = TRUE) / 
    sum(joined_dataset$`Total CO2 Emissions (non_biogenic)`[joined_dataset$State == "CA"], na.rm = TRUE),
   #Same but for Texas
   "Sector Contribution (%) of Texas' total CO2 emissions" = 
    100 * sum(if_else(State == "TX", `Total CO2 Emissions (non_biogenic)`, 0, missing = 0), na.rm = TRUE) / 
    sum(joined_dataset$`Total CO2 Emissions (non_biogenic)`[joined_dataset$State == "TX"], na.rm = TRUE),
    "Number of industry" = length(unique(industry)),
  )

## Tables for each summary

dataset_summary |>
  kable("html", caption = "Global database information") |>
  kable_styling(full_width = T, bootstrap_options = c("striped", "hover", "condensed"))


NAICS2_level_summary |>
  kable("html", caption = "Per NAICS 2 database information") |>
  kable_styling(full_width = T, bootstrap_options = c("striped", "hover", "condensed"))
```

We notice that there is no industries in Texas that reported carbon emissions in the NAICS 11 sectors, namely Agriculture, Forestry, Fishing and Hunting. On the other hand, there is no Californian firms that have reported carbon emissions in both NAICS 23 and 49 sectors, namely Construction and Transportation/Warehousing. To enhance the readability of our following graphical representations and because their contribution to global carbon emissions are infinitesimal (around 0.001% maximum) we will cancel out those industries from our analysis and interpretations. The analysis of carbon emissions of those sectors is indeed interesting but less with our energy-producing approach, according to the three types we defined. For example, the construction sector accounted for 36% of total US CO2 emissions in the US in 2018 ([EIA](https://www.iea.org/reports/global-status-report-for-buildings-and-construction-2019)) but we see that the part we are interested in only accounts for 0.00013% of total C02 emissions in Texas and California.

Another key observation is the sector Contribution of each State's total CO2 emissions. We notice that the contribution is highly uneven, with sector 21 and 22 accounting for more than 95% of total Texas' emissions while accounting only for around 65% in California. This distribution highltights both Texas' focus on high-emission sectors and California relative diversification in terms of polluting sectors.

## Part 1 : Non-causal analysis

We want to determine the size of the contribution of `avg_EarnS`and `total_Emp` in the changes of `Total CO2 Emissions (non_biogenic)` by `NAICS2  (sectors)` in California and Texas.

### Graphical analysis

```{r}
#| echo: false
#| message: false

# Comparing the evolution of our main explanatory variables at a sectoral level

## Evolution of Total Annual Employment in NAICS2 sectors
graph_emp1 <- joined_dataset |>
  ## Filtering out sectors which do not have data for both States
  filter(`NAICS2  (sectors)` != 11 & `NAICS2  (sectors)` != 23 & `NAICS2  (sectors)` != 49) |>
  group_by(`NAICS2  (sectors)`, year) |>
  ## Computing Total Employment and Net Employment Change at a NAICS2 level
  summarise(total_emp_sector = sum(total_Emp, na.rm = TRUE),
            total_emp_change_sector = sum(total_FrmJbC, na.rm = TRUE),
            .groups = "drop") |>
  ggplot(aes(x = year)) +
  ## Plotting a line graph for Total Employment and rescaling it for better visualization (dividing by 10)
  geom_line(aes(y = total_emp_sector/5, colour = `NAICS2  (sectors)`)) +
  geom_point(aes(y = total_emp_sector/5, colour = `NAICS2  (sectors)`), size = 1) +
  ## Plotting a barplot for Net EMployment Change
  geom_col(aes(y = total_emp_change_sector, fill = `NAICS2  (sectors)`), alpha = 0.3) +
  ## Renaming the primary axis 
  scale_y_continuous(name = "Net Employment Change by Sector",
                     ## Creating a secondary axis for Total Employment, converting back its scale to correctly show the values (multiplying by 10)
                     sec.axis = sec_axis(~ .*5, name = "Total Employment")) +
  labs(title = "Evolution of Total Employment by Sector",
       x = "Year") +
  ## Background without grid or annotations
  theme_minimal()

## Evolution of Average Monthly Wage in NAICS2 sectors
graph_wage1 <- joined_dataset |>
  ## Filtering out sectors which do not have data for both States
  filter(`NAICS2  (sectors)` != 11 & `NAICS2  (sectors)` != 23 & `NAICS2  (sectors)` != 49) |>
  group_by(`NAICS2  (sectors)`, year) |>
  ## Computing Average Wage per NAICS2 sector
  summarise(avg_wage_sector = mean(avg_EarnS, na.rm = TRUE), .groups = "drop") |>
  ggplot(aes(x = year)) +
  geom_line(aes(y = avg_wage_sector, colour = `NAICS2  (sectors)`)) +
  geom_point(aes(y = avg_wage_sector, colour = `NAICS2  (sectors)`), size = 1) +
  scale_y_continuous(name = "Average Monthly Wage") +
  labs(title = "Evolution of Average Monthly Wage by Sector",
    x = "Year") +
  theme_minimal()

## Using the cowplot package to visualize both graphs side by side 
## Combining legends from bothgraphs
legend <- get_legend(graph_emp1)

## Removing legends from original plots
graph_emp1 <- graph_emp1 + theme(legend.position = "none")
graph_wage1 <- graph_wage1 + theme(legend.position = "none")

# Combining the plots with the shared legend and rescaling their position
plot_grid(
  graph_emp1, graph_wage1, legend, 
  ncol = 3, rel_widths = c(1, 0.8, 0.3))
```

First, we observe a relatively high dispersion of monthly average wages across sectors. In 2013, `avg_EarnS` ranged from around 3500 to 7500 dollars and in 2023, if we exclude some big outliers, the range was 5000 - 10000\$. It seems that from 2013 to 2023, the lower wages increased by approximately 40% during the time period, while the highest wages increased by a third. On the other hand, Total Employment stayed relatively stable in most sectors (especially in smaller sectors), with an overall increase in 10 years. Most sectors experienced job contractions during the Covid-period, starting with sector 72 (Accommodation & Food Services). We can observe that sector 21 (Mining, Quarrying & Oil & Gas Extraction) experienced massive lay-offs in 2015 and 2016, probably due to the sharp decline in oil-prices during the mid-2014s, which impacted especially shale oil companies in Texas. This could also have impacted the Manufacturing sector 33 (also shown in the decline during this period).

Note : Even if the dataset comprises energy-related facilities, those categorized under other NAICS sectors, such as sector 62 or 72 likely involve other activities as part of or adjacent to the energy infrastructure.

The second and third graph show, respectively, the evolution of `avg_EarnS` and CO2 Emissions and the evolution of `total_Emp` and CO2 Emissions, both at a sectoral level and by State.

```{r}
#| echo: false
#| message: false

# Comparing the evolution of Average Monthly Wage and CO2 Emissions by Sectors in California and Texas

## Evolution in California
graph_CA_wage <- joined_dataset |>
  filter(`NAICS2  (sectors)` != 11 & `NAICS2  (sectors)` != 23 & `NAICS2  (sectors)` != 49) |>
  ## Filtering data for California
  filter(State == "CA") |>
  group_by(`NAICS2  (sectors)`, year) |>
  summarise(
    ## Computing Average CO2 Emissions by Firm at a NAICS2 level
    co2_per_firm = sum(`Total CO2 Emissions (non_biogenic)`) / sum(`Number of firms`),
    avg_wage_sector = mean(avg_EarnS, na.rm = TRUE), .groups = "drop") |>
  ggplot(aes(x = year)) + 
  ## Plotting a bar plot for CO2 Emissions per firm and rescaling it for better visualization (dividing by 1000)
  geom_col(aes(y = co2_per_firm / 500, fill = `NAICS2  (sectors)`), alpha = 0.5) +
  ## Plotting a line graph for Average Wage by Sector
  geom_line(aes(y = avg_wage_sector, color = `NAICS2  (sectors)`)) +
   geom_point(aes(y = avg_wage_sector, colour = `NAICS2  (sectors)`), size = 1) +
  scale_y_continuous(
    name = "Average Monthly Wage",
    ## Creating a secondary axis for CO2 Emissions per firm, converting back its scale to correctly show the values (multiplying by 1000)
    sec.axis = sec_axis(~ . * 500, name = "Average CO2 Emissions per Firm")) +
  labs(
    title = "California's CO2 Emissions & Average Wage",
    x = "Year"
  ) +
  theme_minimal()

## Evolution in Texas
graph_TX_wage <- joined_dataset |>
  filter(`NAICS2  (sectors)` != 11 & `NAICS2  (sectors)` != 23 & `NAICS2  (sectors)` != 49) |>
  ## Filtering data for Texas
  filter(State == "TX") |>
  group_by(`NAICS2  (sectors)`, year) |>
  summarise(
    co2_per_firm = sum(`Total CO2 Emissions (non_biogenic)`) / sum(`Number of firms`),
    avg_wage_sector = mean(avg_EarnS, na.rm = TRUE), .groups = "drop") |>
  ggplot(aes(x = year)) + 
  geom_col(aes(y = co2_per_firm / 25000, fill = `NAICS2  (sectors)`), alpha = 0.5) +
  geom_line(aes(y = avg_wage_sector, color = `NAICS2  (sectors)`)) +
   geom_point(aes(y = avg_wage_sector, colour = `NAICS2  (sectors)`), size = 1) +
  scale_y_continuous(
    name = "Average Monthly Wage",
    sec.axis = sec_axis(~ . * 25000, name = "Average CO2 Emissions per Firm")) +
  labs(
    title = "Texas' CO2 Emissions & Average Wage",
    x = "Year"
  ) +
  theme_minimal()

## Using the cowplot package to visualize both graphs side by side 
legend <- get_legend(graph_CA_wage)

graph_CA_wage <- graph_CA_wage + theme(legend.position = "none")
graph_TX_wage <- graph_TX_wage + theme(legend.position = "none")

plot_grid(
  graph_CA_wage, graph_TX_wage, legend, 
  ncol = 3, rel_widths = c(1, 0.8, 0.3))
```

We observe that in California, where the distribution of sectoral `Total CO2 Emissions (non_biogenic)` is less dominated by sectors 21 and 22 like in Texas, the previously observed a general increase in `avg_EarnS` level. In Texas, the second highest sector in terms of CO2 emissions (sector 22) stays relatively stable during the period. Sector 21 seems to be a diverging point in both States. In Texas, we observe an exponential increase in `Total CO2 Emissions (non_biogenic)` from sector 21 from 2018. This could be due to the implementation of new shale oil infrastructures that put Texas in the position of biggest shale oil exporter in the USA. However, average wage in the sector does not follow the trend of an exponential increase (even if it grows steadily during the period). On the contrary, `avg_EarnS` in California increases exponentially while `Total CO2 Emissions (non_biogenic)` from this sector increase more linearly.

```{r}
#| echo: false
#| message: false

graph_CA_emp <- joined_dataset |>
  filter(`NAICS2  (sectors)` != 11 & `NAICS2  (sectors)` != 23 & `NAICS2  (sectors)` != 49) |>
  filter(State == "CA") |>
  group_by(`NAICS2  (sectors)`, year) |>
  summarise(
    co2_per_firm = sum(`Total CO2 Emissions (non_biogenic)`) / sum(`Number of firms`),
    total_emp_sector = sum(total_Emp, na.rm = TRUE), .groups = "drop") |>
  ggplot(aes(x = year)) + 
  geom_col(aes(y = co2_per_firm, fill = `NAICS2  (sectors)`), alpha = 0.5) +
  geom_line(aes(y = total_emp_sector, color = `NAICS2  (sectors)`)) +
   geom_point(aes(y = total_emp_sector, colour = `NAICS2  (sectors)`), size = 1) +
  scale_y_continuous(
    name = "Total Employment",
    sec.axis = sec_axis(~ ., name = "Average CO2 Emissions per Firm")) +
  labs(
    title = "California's CO2 Emissions & Total Employment",
    x = "Year"
  ) +
  theme_minimal()
  
graph_TX_emp <- joined_dataset |>
  filter(`NAICS2  (sectors)` != 11 & `NAICS2  (sectors)` != 23 & `NAICS2  (sectors)` != 49) |>
  filter(State == "TX") |>
  group_by(`NAICS2  (sectors)`, year) |>
  summarise(
    co2_per_firm = sum(`Total CO2 Emissions (non_biogenic)`) / sum(`Number of firms`),
    total_emp_sector = sum(total_Emp, na.rm = TRUE), .groups = "drop") |>
  ggplot(aes(x = year)) + 
  ## Plotting a bar plot for CO2 Emissions per firm and rescaling it for better visualization (dividing by 100)
  geom_col(aes(y = co2_per_firm/100, fill = `NAICS2  (sectors)`), alpha = 0.5) +
  geom_line(aes(y = total_emp_sector, color = `NAICS2  (sectors)`)) +
   geom_point(aes(y = total_emp_sector, colour = `NAICS2  (sectors)`), size = 1) +
  scale_y_continuous(
    name = "Total Employment",
    ## Creating a secondary axis for CO2 Emissions per firm, converting back its scale to correctly show the values (multiplying by 100)
    sec.axis = sec_axis(~ .*100, name = "Average CO2 Emissions per Firm")) +
  labs(
    title = "Texas' CO2 Emissions & Total Employment",
    x = "Year"
  ) +
  theme_minimal()
  
## Using the cowplot package to visualize both graphs side by side 
legend <- get_legend(graph_CA_emp)

graph_CA_emp <- graph_CA_emp + theme(legend.position = "none")
graph_TX_emp <- graph_TX_emp + theme(legend.position = "none")

plot_grid(
  graph_CA_emp, graph_TX_emp, legend, 
  ncol = 3, rel_widths = c(1, 0.8, 0.3))
```

The `total_Emp` variable seems to be more heterogeneous across sectors as well as across States. As we saw before, the sector dominating in terms of CO2 emissions (sector 21) experienced a sharp decline of employment from 2015 onwards, but continued to increase considerably in terms of `Total CO2 Emissions (non_biogenic)` in Texas. While in Texas, sector 21 seems to be the biggest sector in terms of employment, it is situated in California as one of the smallest. On the contrary, the `total_Emp` in sector 92 in California decreased considerably from 2019, as well as `Total CO2 Emissions (non_biogenic)` in the sector, which was not the case in Texas, where total employment grew steadily. In general, `total_Emp` seems to have stayed relatively constant during the time period, even if `Total CO2 Emissions (non_biogenic)` generally increased (exponentially in Texas).

Note : We chose not to use the `facet.wrap()` command to be able to readjust to scaling between the chosen workforce variable and `Total CO2 Emissions (non_biogenic)` for better visualization.

### LMDI decomposition

$L (x,y)= (x-y) /(ln (x) - ln (y))$ or $L(x,y) = x$ for $x = y$ $E = ∑_i(Q_iS_iI_i)$ $\Delta E_Q = \sum_i L(E^T_i,E^0_i)*ln(Q_i^T/Q_i^0)$ $\Delta E_S = \sum_i L(E^T_i,E^0_i)*ln(S_i^T/S_i^0)$ $\Delta E_I = \sum_i L(E^T_i,E^0_i)*ln(I_i^T/I_i^0)$ $\Delta E_T = \Delta E_Q + \Delta E_S+\Delta E_I$

To better analyze the contributions of employment we need to analyze precisely its relationship with the Total C02 emissions. Index decomposition analysis (IDA) is a tool commonly used in energy and emission studies to capture drivers’ impacts on a change. For example, [Zhao and Chen (2014)](https://pubs.acs.org/doi/10.1021/es503513z) uses an IDA to study the drivers of agricultural consumptive water use, their IDA method is called the Logarithmic mean Divisia index (LMDI). The LMDI is currently the most common form of IDA analysis in research papers ([Ang, 2015](https://www.sciencedirect.com/science/article/abs/pii/S0301421515300173)) and has several possible modelizations. We will thus use a LMDI approach based on the work of [Ang, 2015](https://www.sciencedirect.com/science/article/abs/pii/S0301421515300173) to decompose the contributions of each factor on our variable of interests. The traditional method is to describe the emission (E) with three drivers : one linked to a quantity factor (Q), one linked to a structural factor (S) and the last one linked to an intensity or an efficiency factor (I). Here, the decomposition will be less standard as we choose `total_Emp` as the quantity variable. The logic behind this modelization is that total Employment of a sector denotes, according to our hypothesis, the quantity of Labor used and thus the quantity of human activity used as an input to produce the energy (notably by direct emission or by supplying it). In brief, we study the effect of a workforce characteristic variable as a quantity proxy. The rest of the model is constructed such that we have an equality between the two hand sides. We thus have the following formula :

As we explained in the Methodology part, we will choose an additive LMDI due to the nature of our chosen variables. The variation of CO2 emission will then be calculated based on a difference which equals the sum of all the drivers’ variations. It follows the following structure of our model :

```{r}
# Calculate Q (Total Employment), S (Activity Share), and I (Intensity)
joined_dataset_preparation <- joined_dataset |> 
  group_by(year,`NAICS2  (sectors)`) |>
    mutate(Total_Emp_sector = sum(total_Emp, na.rm = TRUE)) |>
  ungroup() |>
  group_by(year,industry) |>
  mutate(
    Activity_Share = total_Emp / Total_Emp_sector,
    Intensity = `Total CO2 Emissions (non_biogenic)` / total_Emp
  )


base_year <- 2013
target_year <- 2023

joined_dataset_2013 <- joined_dataset_preparation |> filter(year == base_year)
joined_dataset_2023 <- joined_dataset_preparation |> filter(year == target_year)

# Decomposition using the  framework
lmdi_results <- joined_dataset_2023 |>
  left_join(joined_dataset_2013, by = "industry", suffix = c("", "_base")) |>
  filter(`NAICS2  (sectors)` != 42) |>
  mutate(
    log_mean = if_else(
      `Total CO2 Emissions (non_biogenic)` != `Total CO2 Emissions (non_biogenic)_base`,
      (`Total CO2 Emissions (non_biogenic)` - `Total CO2 Emissions (non_biogenic)_base`) /
      (log(`Total CO2 Emissions (non_biogenic)`) - log(`Total CO2 Emissions (non_biogenic)_base`)),
      `Total CO2 Emissions (non_biogenic)`
    ),
    Delta_Activity = log_mean * log(Total_Emp_sector / Total_Emp_sector_base),
    Delta_Share = log_mean * log(Activity_Share / Activity_Share_base),
    Delta_Intensity = log_mean * log(Intensity / Intensity_base)
  ) |>
  group_by(`NAICS2  (sectors)`) |>
  summarize(
    Total_CO2_var = sum(Delta_Activity + Delta_Share + Delta_Intensity, na.rm = TRUE),
    Contribution_Activity = sum(Delta_Activity, na.rm = TRUE),
    Contribution_Share = sum(Delta_Share, na.rm = TRUE),
    Contribution_Intensity = sum(Delta_Intensity, na.rm = TRUE),
    .groups = "drop"
  )

contribution_summary_table <- lmdi_results |>
  group_by(`NAICS2  (sectors)`) |>
  mutate(
    A_Percentage = 100 * Contribution_Activity / Total_CO2_var,
    S_Percentage = 100 * Contribution_Share / Total_CO2_var,
    I_Percentage = 100 * Contribution_Intensity / Total_CO2_var,
  )
  

# Table summarizing contributions in value and percent
contribution_summary_table |>
  mutate(
    "CO2 emissions Variation" = Total_CO2_var,
    "Activity contribution" = Contribution_Activity,
    "Structure contribution" = Contribution_Share,
    "Intensity contribution" = Contribution_Intensity,
    "Activity contribution (in %)" = A_Percentage,
    "Structure contribution (in %)" = S_Percentage,
    "Intensity contribution (in %)" = I_Percentage,
    .keep = "none"
  ) |>
  kable("html", caption = "Contribution of each factor") |>
  kable_styling(full_width = T, bootstrap_options = c("striped", "hover", "condensed"))

```

```{r}
# Graphical representation updated with A (Activity), S (Structure), and I (Intensity)
normalized_data <- contribution_summary_table |>
  mutate(
    Total_Abs_Contrib = abs(A_Percentage) + abs(S_Percentage) + abs(I_Percentage),
    Activity_Percentage_Norm = abs(A_Percentage) / Total_Abs_Contrib * 100,
    Structure_Percentage_Norm = abs(S_Percentage) / Total_Abs_Contrib * 100,
    Intensity_Percentage_Norm = abs(I_Percentage) / Total_Abs_Contrib * 100
  ) |>
  select(`NAICS2  (sectors)`, Activity_Percentage_Norm, Structure_Percentage_Norm, Intensity_Percentage_Norm) |>
  pivot_longer(
    cols = c(Activity_Percentage_Norm, Structure_Percentage_Norm, Intensity_Percentage_Norm),
    names_to = "Factor",
    values_to = "Normalized_Percentage_Contribution"
  )

# Updated bar chart
normalized_data |> 
  ggplot(aes(x = `NAICS2  (sectors)`, y = Normalized_Percentage_Contribution, fill = Factor)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(
    title = "Contributions (%) of Activity (A), Structure (S), and Intensity (I) \n to CO2 Variations by Sector",
    x = "Sector (NAICS 2)",
    y = "Normalized Percentage Contribution",
    fill = "Factor"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
# Summarizing average contributions across all sectors and years
relative_contrib_between_var <- normalized_data |>
  group_by(Factor) |> 
  summarize(Average_Percentage_Contribution = mean(Normalized_Percentage_Contribution, na.rm = TRUE))

# Rename factors for better readability
relative_contrib_between_var <- relative_contrib_between_var |> 
  mutate(Factor = case_when(
    Factor == "Activity_Percentage_Norm" ~ "Activity (A)",
    Factor == "Structure_Percentage_Norm" ~ "Structure (S)",
    Factor == "Intensity_Percentage_Norm" ~ "Intensity (I)",
  ))

# Horizontal bar chart that describes the relative importance of each factor between them
ggplot(relative_contrib_between_var, aes(x = Average_Percentage_Contribution, y = reorder(Factor, Average_Percentage_Contribution), fill = Factor)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Relative Importance of Factors in CO2 Variations",
    x = "Average Percentage Contribution",
    y = "Factor",
    fill = "Factor"
  )

```

```{r}

# Prepare the subset including Total_Emp_sector_2
joined_subset_preparation <- joined_dataset |> 
  filter(`NAICS2  (sectors)` %in% c(21, 22)) |> # Keep only sectors 21 and 22
  group_by(year, `NAICS2  (sectors)`) |>
  mutate(Total_Emp_sector_2 = sum(total_Emp, na.rm = TRUE)) |> # Calculate Total Employment per sector
  ungroup() |>
  group_by(year, State, industry) |>
  mutate(
    Activity_Share = total_Emp / Total_Emp_sector_2,
    Intensity = `Total CO2 Emissions (non_biogenic)` / total_Emp
  )

# Split into base and target year
joined_subset_2013 <- joined_subset_preparation |> filter(year == base_year)
joined_subset_2023 <- joined_subset_preparation |> filter(year == target_year)

# Perform LMDI decomposition using the prepared subset
state_sector_lmdi <- joined_subset_2023 |>
  left_join(joined_subset_2013, by = "industry", suffix = c("", "_base")) |>
  group_by(State, `NAICS2  (sectors)`) |>
  mutate(
    log_mean = if_else(
      `Total CO2 Emissions (non_biogenic)` != `Total CO2 Emissions (non_biogenic)_base`,
      (`Total CO2 Emissions (non_biogenic)` - `Total CO2 Emissions (non_biogenic)_base`) / 
        (log(`Total CO2 Emissions (non_biogenic)`) - log(`Total CO2 Emissions (non_biogenic)_base`)),
      `Total CO2 Emissions (non_biogenic)`
    ),
    Delta_Activity = log_mean * log(Total_Emp_sector_2 / Total_Emp_sector_2_base),
    Delta_Structure = log_mean * log(Activity_Share / Activity_Share_base),
    Delta_Intensity = log_mean * log(Intensity / Intensity_base)
  ) |> 
  summarize(
    Contribution_Activity = sum(Delta_Activity, na.rm = TRUE),
    Contribution_Structure = sum(Delta_Structure, na.rm = TRUE),
    Contribution_Intensity = sum(Delta_Intensity, na.rm = TRUE),
    Total_CO2_Change = sum(Contribution_Activity + Contribution_Structure + Contribution_Intensity, na.rm = TRUE),
    .groups = "drop"
  )


# Step 3a: Prepare data for absolute contributions visualization
state_contributions <- state_sector_lmdi |> 
  pivot_longer(
    cols = starts_with("Contribution"),
    names_to = "Factor",
    values_to = "Contribution"
  )

# Step 3a: Plot absolute contributions
ggplot(state_contributions, aes(x = `NAICS2  (sectors)`, y = Contribution, fill = Factor)) +
  geom_bar(stat = "identity", position = "stack") +
  facet_wrap(~ State) +
  labs(
    title = "Contributions of Factors to CO2 Variations in NAICS 21 and 22 by State",
    x = "Sector (NAICS 2)",
    y = "Contribution to CO2 Variation",
    fill = "Factor"
  ) +
  theme_minimal()

# Step 3b: Normalize contributions for percentage analysis
state_relative <- state_sector_lmdi |>
  mutate(
    Total_Contribution = abs(Contribution_Activity) + abs(Contribution_Structure) + abs(Contribution_Intensity),
    Activity_Percentage = 100 * abs(Contribution_Activity) / Total_Contribution,
    Structure_Percentage = 100 * abs(Contribution_Structure) / Total_Contribution,
    Intensity_Percentage = 100 * abs(Contribution_Intensity) / Total_Contribution,
  ) |> 
  pivot_longer(
    cols = ends_with("_Percentage"),
    names_to = "Factor",
    values_to = "Percentage"
  )

# Step 3b: Plot relative contributions
ggplot(state_relative, aes(x = `NAICS2  (sectors)`, y = Percentage, fill = Factor)) +
  geom_bar(stat = "identity", position = "stack") +
  facet_wrap(~ State) +
  labs(
    title = "Relative Contributions of Factors to CO2 Variations in NAICS 21 and 22 by State",
    x = "Sector (NAICS 2)",
    y = "Percentage Contribution",
    fill = "Factor"
  ) +
  theme_minimal()

```

## Model Fitting

In the second part of the analysis, we want to analyse the effect of the Cap-and-Trade program put in place in California since 2015 and which is enforced by the California Air Resources Board (CARB). It is a market-based system which sets a cap (a limit) to the number of greenhouse gas emissions released by facilities during a period. Within this cap, emission allowances are distributed by a mix of free allocation and quarterly auctions, which can be traded by facilities within the cap. Since 2015, the cap-and-trade rules apply to electric power plants, industrial plants and fuel distributors that emit 25,000 tons of carbon dioxide equivalent per year or more.

### Base Model

To identify if the program significantly affects the CO2 Emissions of industries in these States, we use a base regression model without taking into account the effect of this policy.

Therefore, we establish a relationship between our workforce characteristics, Average Monthly Wage and Total Employment and CO2 Emissions by NAICS 4 sectors (i.e. at industry level) in California and Texas according to the following equation :

$$
log(CO_2 \space emissions) = \beta_0 + log(Average \space Monthly \space Wage)\beta_1 + log(Total \space Employment)\beta_2 + \epsilon
$$

where CO2 Emissions corresponds to the logarithm of total CO2 Emissions (in unit metric tons) of one industry (NAICS4 level of aggregation); ln earn corresponds to the logarithm of average Monthly wage in one industry; ln emp corresponds to the logarithm of the total number of employees in one industry.

We choose to use a log-log regression model to linearize a possibly non-linear relationship between our variables. Additionally, our dataset shows a high amount of extreme outliers,conducting to a highly skewed distribution. Log transformation makes the distribution of the dependent or independent variable closer to normal. To be able to use a log-log model, we deleted 9 observations (3 for CO2 Emissions and 6 for Total Employment).

Using the Ordinary Least Squares method, we obtain the following results :

```{r}
#| echo: false
#| message: false
#| warning: false

## Defining logarithmic variables to rationalize outliers/zero values 
dataset_for_ols <- joined_dataset |> 
  filter(`Total CO2 Emissions (non_biogenic)` > 0 & total_Emp > 0) |>
  mutate(`ln Total CO2 Emissions` = log(`Total CO2 Emissions (non_biogenic)`), `ln emp` = log(total_Emp), `ln earn` = log(avg_EarnS))


## Running the base regression
base_ols_model <- lm(`ln Total CO2 Emissions` ~  `ln earn` + `ln emp`, data = dataset_for_ols)

## Summary of the OLS results
stargazer(base_ols_model, type = "latex",
          title = "Base Model Regression Results",
          out = "base_regression_results.tex")
```

We observe that the variable `ln earn` is positive and highly significant with a p-value of less than 2e-16. That means that all else equal, a 1% increase in average monthly wage is associated with an approximately 3.04 % increase in CO2 emissions. On the other hand, `ln emp` is not statistically significant and is positively correlated with CO2 emissions : all else equal, a 1% increase of Total Employment in an industry is associated with a 0,06% increase of CO2 Emissions in that industry. These results partially contradict our initial hypothesis. On one hand, the higher the wage, the higher the CO2 emissions in an industry. If this result does not condone the concept of “green jobs”, it aligns with the IEA’s report, according to which higher-emitting industries, like oil extraction, pay higher wages to employees than more volatile industries. On the other hand, the more employees there are, the higher the emissions (even if not significantly). This confirms the idea that employment size works as a proxy for industry size. The bigger the industry, the more it should emit.

The R² and Adjusted R² are both 0.17, which means that approximately 17% of the changes in CO2 emissions can be explained by variations of workforce characteristics. This relatively low value indicated probable OVB, as we did not include traditional explanatory variables in our model, such as energy consumption for example. Nonetheless, we have an F-statistic of 106.4 (p-value \< 2.2e-16), which indicates overall, our model is statistically significant.

### Extended model with dummy variable

To model the effect of the program, we created a dummy corresponding to the regulatory environment in which a particular observation is situated. The dummy `Policy` will take the value 1 when the observation is located in California, post-2015 and 0 otherwise.

Completing the previous model, we now have the following equation :

$$
log(CO_2 \space emissions) = \beta_0 + log(Average \space Monthly \space Wage)\beta_1 + log(Total \space Employment)\beta_2 + Policy\beta_3 + \epsilon
$$

Applying OLS, we now have the following results :

```{r}
#| echo: false
#| message: false
#| warning: false

## Defining a dummy variable for State, which takes the value 1 for Texas and 0 for California
dataset_for_ols <-
  dataset_for_ols |>
  mutate(state_dummy = if_else(State == "CA" & year > 2015, 1, 0))

extend_ols_model <- lm(`ln Total CO2 Emissions` ~  `ln earn` + `ln emp` + state_dummy, data = dataset_for_ols)

# Summary of the OLS results
stargazer(extend_ols_model, type = "latex",
          title = "Dummy Model Regression Results",
          out = "dummy_regression_results.tex")
```

As in the previous results, we still have a positive and highly significant correlation between average monthly wage and CO2 emissions per industry : A 1% increase in average wages is associated with approximately a 3.16% increase in CO2 emissions, keeping all other variables constant. On the contrary ln emp is still not statistically significant (p-value = 0.134) and is still positive. Finally, the dummy `Environment` proves to be highly significant (p-value \< 0.01) and positive. We could infer that firms in California after the introduction of the cap-and-trade program in 2015 emit approximately 90% less CO2 than firms in Texas during the same period, controlling for wages and employment. This result confirms our main hypothesis : The cap-and-trade program has a significant effect on the emissions of industries in our dataset.

Additionally, the Adjusted R² is 0.1994, slightly higher than the previous model (0.1784), which shows in theory that including the Environment dummy improves our model.

## Model Extension and Fixed Effects

### Testing the model

The results of the regression question the conformity to the model’s initial assumptions, especially in terms of normality of residuals, i.e. symmetrical distribution of residuals around 0 and homoscedasticity, i.e. constant variance among the residuals of the regression.

```{r}
#| echo: false
#| message: false
#| warning: false

# Testing model assumptions

## Normality and linearity
par(mfrow = c(2, 2)) ### setting up layout
plot(extend_ols_model)

## Homoscedasticity
stargazer(bptest(extend_ols_model), type = "latex",
          title = "Breusch-Pagan test results",
          out = "bp_test_results.tex")
```

We can assess normality of residuals by first plotting the residuals in a Q-Q plot. We observe that while the residuals follow the diagonal line in general, the points deviate significantly in the tails.This implies that the residuals are not normally distributed. Secondly, the Residuals vs. Fitted plot reveals that the residuals of the regression are not randomly scattered, as they should be in the absence of heteroscedasticity. On the contrary, the residuals seem to follow a decreasing funnel shape, which suggests non-constant variance of the residuals i.e. presence of heteroscedasticity. This result is further confirmed after implementing a Breusch-Pagan test of heteroscedasticity : the p-value < 2.2e-16 confirms the presence of strong heteroscedasticity which we will proceed to correct in the next section.

### Introducing fixed effects

The conclusions of the previous tests lead us to consider that heterogeneity in the relationship between our dependent variable and independent variables may bias our results. The graphical analysis effectuated in the first part of the paper showed heterogeneity of workforce characteristics at a sectoral level (NAICS 2 level of aggregation). To confirm this hypothesis, we introduce a fixed-effect model following this equation :

$$
log(CO_2 \space emissions) = \beta_0 + log(Average \space Monthly \space Wage)\beta_1 + log(Total \space Employment)\beta_2 + Policy\beta_3 \space\|\space NAICS 2 \space sectors + \epsilon
$$

where NAICS 2 sector corresponds to sectoral fixed effect i.e.controlling for unobserved heterogeneity across sectors. Additionally, we will implement robust standard errors to correct further our heteroscedasticity and normality issues.

Applying a fixed-effect OLS using the `lfe` package, we now have the following final result :

```{r}
#| echo: false
#| message: false
#| warning: false

## Introducing fixed effect year
fe_ols_model <- felm(log(`Total CO2 Emissions (non_biogenic)`) ~  `ln earn` + `ln emp` + state_dummy | `NAICS2  (sectors)`, data = dataset_for_ols)

## Summary of fixed-effect model
stargazer(fe_ols_model, type = "latex",
          title = "Fixed-Effects Model Regression Results",
          out = "fe_regression_results.tex") 
```

The `ln earn` variable remains highly significant and positively correlated with CO2 emissions, just like in the previous results. The high similarity between the coefficients in all three models implies that wage does not correlate that differently with CO2 emissions across sectors. Similarly, the Environment dummy keeps its negative sign (-0.94) and gains significance (p = 9.22e-11). After controlling for sectoral fixed effects, firms in California, since the Cap-and-Trade program, emit approximately 94% less CO2 than similar firms in Texas or California pre-2015, thus corresponding to our previous result. Finally, the variable `ln emp` is now negatively correlated with CO2 emissions of industries (-0.004), but still not statistically significant (p = 0.942). The negative sign could be due to the fact that high-emitting industries (like fuel suppliers) may be more capital-intensive than labor intensive. Sectoral differences could have been masking the true effect of employment size on CO2 emissions of industries. We could indeed infer from the result that labor-intensive industries, i.e. that have more employees emit less than capital-intensive industries. However, this hypothesis should be relativized as the variable is even less significant than before.

Compared to the previous model, the residual standard error has decreased to 2.085 (from a previous 2.314), which indicates improved fit. The Adjusted R² is now 0.3497, which is much higher than in the previous models (lower than 20%). The fixed effects improve the explanatory power of the model, also highlighted by a high F-statistic (72.33). Overall, the fixed-effects model seems to provide more reliable results compared to the earlier models.

## Conclusion
